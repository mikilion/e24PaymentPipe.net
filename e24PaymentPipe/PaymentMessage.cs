using System;
using System.Globalization;
using System.Text;

namespace e24PaymentPipe
{
  /// <summary>
  /// 
  /// </summary>
  sealed public class PaymentMessage
  {
    /// <summary>
    /// Unique ID generated by and used within the Payment Gateway to identify a payment.
    /// </summary>
    public string PaymentId { get; private set; }

    /// <summary>
    /// Transaction ID for a single action
    /// generated by Payment Gateway
    /// </summary>
    public string TranId { get; private set; }

    /// <summary>
    /// Id for the payment gateway
    /// </summary>
    public string Id { get; private set; }

    /// <summary>
    /// password for the payment gateway
    /// </summary>
    public string Password { get; private set; }

    /// <summary>
    /// Action required
    /// </summary>
    public RequiredAction RequiredAction { get; private set; }

    /// <summary>
    /// Amount of the transaction in the format ###.##
    /// </summary>
    /// <seealso cref="Currency"></seealso>
    public double Amount { get; private set; }

    /// <summary>
    /// The Merchant assigned tracking ID
    /// </summary>
    public string TrackId { get; private set; }

    /// <summary>
    /// ISO-4127 currency numeric code
    /// </summary>
    /// <seealso cref="Amount"></seealso>
    public int Currency { get; private set; }

    /// <summary>
    /// User defined field. See the specifications from your payment gateway
    /// to see if this is used and how
    /// </summary>
    public string Udf1 { get; private set; }

    /// <summary>
    /// User defined field. See the specifications from your payment gateway
    /// to see if this is used and how
    /// </summary>
    public string Udf2 { get; private set; }

    /// <summary>
    /// User defined field. See the specifications from your payment gateway
    /// to see if this is used and how
    /// </summary>
    public string Udf3 { get; private set; }

    /// <summary>
    /// User defined field. See the specifications from your payment gateway
    /// to see if this is used and how
    /// </summary>
    public string Udf4 { get; private set; }

    /// <summary>
    /// User defined field. See the specifications from your payment gateway
    /// to see if this is used and how
    /// </summary>
    public string Udf5 { get; private set; }

    /// <summary>
    /// default constructor for the class, initializes the required properties
    /// </summary>
    /// <param name="paymentId"></param>
    /// <param name="tranId"></param>
    /// <param name="id"></param>
    /// <param name="password"></param>
    /// <param name="action"></param>
    /// <param name="amount"></param>
    /// <param name="trackId"></param>
    /// <param name="currency"></param>
    /// <param name="udf1"></param>
    /// <param name="udf2"></param>
    /// <param name="udf3"></param>
    /// <param name="udf4"></param>
    /// <param name="udf5"></param>
    public PaymentMessage(
      string paymentId,
      string tranId,
      string id,
      string password,
      RequiredAction action,
      double amount,
      string trackId,
      int currency = 978,
      string udf1 = "",
      string udf2 = "",
      string udf3 = "",
      string udf4 = "",
      string udf5 = ""
    )
    {
      this.PaymentId = paymentId;
      this.TranId = tranId;
      this.Id = id;
      this.Password = password;
      this.RequiredAction = action;
      this.Amount = amount;
      this.TrackId = trackId;
      this.Currency = currency;
      this.Udf1 = udf1;
      this.Udf2 = udf2;
      this.Udf3 = udf3;
      this.Udf4 = udf4;
      this.Udf5 = udf5;
    }

    /// <summary>
    /// builds the url parameters to be sent via POST to the payment gateway
    /// </summary>
    /// <returns>list of parameters concatenated by &amp;</returns>
    public string ToUrlParameters()
    {
      StringBuilder buf = new StringBuilder();

      buf.Append("paymentid=" + Uri.EscapeDataString(this.PaymentId) + "&");
      buf.Append("transid=" + Uri.EscapeDataString(this.TranId) + "&");
      buf.Append("id=" + Uri.EscapeDataString(this.Id) + "&");
      buf.Append("password=" + Uri.EscapeDataString(this.Password) + "&");
      buf.Append("action=" + Uri.EscapeDataString(this.RequiredAction.ToString("d")) + "&");
      if (this.Amount > 0)
        buf.Append("amt=" + Uri.EscapeDataString(this.Amount.ToString("0.00", CultureInfo.InvariantCulture)) + "&");
      buf.Append("trackid=" + Uri.EscapeDataString(this.TrackId) + "&");
      if (this.Currency > 0)
      buf.Append("currencycode=" + Uri.EscapeDataString(this.Currency.ToString("000")) + "&");
      if (this.Udf1.Length > 0)
        buf.Append("udf1=" + Uri.EscapeDataString(this.Udf1) + "&");
      if (this.Udf2.Length > 0)
        buf.Append("udf2=" + Uri.EscapeDataString(this.Udf2) + "&");
      if (this.Udf3.Length > 0)
        buf.Append("udf3=" + Uri.EscapeDataString(this.Udf3) + "&");
      if (this.Udf4.Length > 0)
        buf.Append("udf4=" + Uri.EscapeDataString(this.Udf4) + "&");
      if (this.Udf5.Length > 0)
        buf.Append("udf5=" + Uri.EscapeDataString(this.Udf5) + "&");

      return buf.ToString().TrimEnd('&');
    }
  }
}